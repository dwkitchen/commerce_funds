<?php

function commerce_funds_payment_commerce_payment_method_info() {

  $payment_methods = array();

  $payment_methods['commerce_funds_payment'] = array(
    'title' => t('Account Funds'),
    'short_title' => t('Funds'),
    'display_title' => t('Account Funds'),
    'description' => t('Funds in User Account'),
    'terminal' => FALSE,
    'offsite' => FALSE,
  );

  return $payment_methods;
}

function commerce_funds_payment_submit_form($payment_method, $pane_values, $checkout_pane, $order) {

  $wrapper = entity_metadata_wrapper('commerce_order', $order);
  $total = commerce_line_items_total($wrapper->commerce_line_items);

  $account_user = user_load($order->uid);

  $funds_account = commerce_funds_account_load_by_user($account_user, $total['currency_code']);

  $result = $funds_account->balance - $total['amount'];

  $form['balance'] = array(
      '#type' => 'markup',
      '#markup' => 'Availiable Funds: ' . commerce_currency_format($funds_account->balance, $funds_account->currency_code),
      '#prefix' => '<p>',
    '#sufix' => '</p>'
  );

  $form['total'] = array(
    '#type' => 'markup',
    '#markup' => 'Order Total: ' . commerce_currency_format($total['amount'], $total['currency_code']),
    '#prefix' => '<p>',
    '#sufix' => '</p>'
  );

  $form['result'] = array(
    '#type' => 'markup',
    '#markup' => 'Balance after order: ' . commerce_currency_format($result, $funds_account->currency_code),
    '#prefix' => '<p>',
    '#sufix' => '</p>'
  );

  return $form;
}

function commerce_funds_payment_submit_form_validate($payment_method, $pane_form, $pane_values, $order, $charge) {
  $wrapper = entity_metadata_wrapper('commerce_order', $order);
  $total = commerce_line_items_total($wrapper->commerce_line_items);

  $account_user = user_load($order->uid);

  $funds_account = commerce_funds_account_load_by_user($account_user, $total['currency_code']);

  $result = $funds_account->balance - $total['amount'];

  if ($result > 0) {
    return TRUE;
  }
  return FALSE;
}

function commerce_funds_payment_submit_form_submit($payment_method, $pane_form, $pane_values, $order, $charge) {
  $return = commerce_funds_payment_transaction($payment_method, $order, $charge);
  return $return;
}

function commerce_funds_payment_transaction($payment_method, $order, $amount) {
  $account_user = user_load($order->uid);
  $account = commerce_funds_account_load_by_user($account_user, $amount['currency_code']);

  $account->balance -= $amount['amount'];

  $funds_transaction = commerce_funds_transaction_new('payment');
  $funds_transaction->account_id = $account->account_id;
  $funds_transaction->reference = $order->order_id;
  $funds_transaction->amount = -$amount['amount'];
  $funds_transaction->currency_code = $amount['currency_code'];

  if (commerce_funds_transaction_save($funds_transaction)) {
    $transaction = commerce_payment_transaction_new('commerce_funds_payment', $order->order_id);
    $transaction->instance_id = $payment_method['instance_id'];
    $transaction->amount = $amount['amount'];
    $transaction->currency_code = $amount['currency_code'];
    $transaction->status = COMMERCE_PAYMENT_STATUS_SUCCESS;
    $transaction->message = t('Payment processed successfully');
    $transaction->remote_id = $funds_transaction->transaction_id;

    if (commerce_payment_transaction_save($transaction)){
      commerce_funds_account_save($account);
      return TRUE;
    }
  }

  return FALSE;
}